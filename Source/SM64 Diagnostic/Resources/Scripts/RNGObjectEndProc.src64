/*
This script 
*/
/*
Memory Table (0x803e0000)

[0-3]: bool isValid
[4-7]: ushort tempValue
[8-B]: ushort nextObjRngValuesPtr
[C-D]: ushort framePreviousValue 
[E-F]: ushort frameCurrentValue
[10 + 8i] ushort objRngStartValue
[12 + 8i] ushort objRngEndValue
[14 + 8i] uint objAddress

currentRng = (ushort) *0x8038EEE0
currentObj = (uint) *0x80361160
*/

// [if nextObjRngValuesPtr >= 0x803e0800 return;]

// [t2 = 0x803e0000]
// LUI t2, 0x803e
// ORI t2, t2, 0x00
3C 0B 80 3E
35 6B 00 00

// [t3 = 0x803e0800]
// ADDIU t3, t2, 0x800
25 6C 08 00

// [t2 = nextObjRngValuesPtr]
// LW t2, t2(0x08)
8D 6B 00 08

// [t3 -= t2]
// SUBU t3, t3, t3
01 8B 60 23

// [if (t3 <= t2) break;] = [if (t3 - t2 <= 0)]
// BLETZ t3, 19
// NOP
19 80 00 13
00 00 00 00



// [t2 = 0x803e0000]
// LUI t2, 0x803e
// ORI t2, t2, 0x00
3C 0B 80 3E
35 6B 00 00

// 1[objRngStartValue = tempValue]
// LHU t3, t2(0x04)
95 6C 00 04

// [t2 = nextObjRngValuesPtr]
// LW t2, t2(0x08)
8D 6B 00 08

// 2[objRngStartValue = tempValue]
// SH t3, t2(0x00)
A5 6C 00 00

// [objRngEndValue = currentRng]
// LUI t3, 0x8038
// ORI t3, t3, 0xEEE0
// LHU t3, t3(0x00)
// SH t3, t2(0x02)
3C 0C 80 38
35 8C EE E0
95 8C 00 00
A5 6C 00 02

// [objAddress = currentObj]
// LUI t3, 0x8036
// ORI t3, t3, 0x1160
// LW t3, t3(0x00)
// SW t3, t2(0x04)
3C 0C 80 36
35 8C 11 60
8D 8C 00 00
AD 6C 00 04

// [t2 = 0x803e0000]
// LUI t2, 0x803e
// ORI t2, t2, 0x00
3C 0B 80 3E
35 6B 00 00

// [t3 = nextObjRngValuesPtr]
// LW t3, t2(0x08)
8D 6C 00 08

// [nextObjRngValuesPtr++]
// ADDIU t3, t3, 0x08
// SW t3, t2(0x08)
25 8C 00 08
AD 6C 00 08

// [objCounter++]
// LW t3, t2(0)
// ADDIU t3, t3, 0x01
// SW t3, t2(0x00)
8D 6C 00 00
25 8C 00 01
AD 6C 00 00
